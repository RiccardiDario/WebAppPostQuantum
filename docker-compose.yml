networks:
  custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24

volumes:
  certs-volume:
  output-volume:

services:
  server:
    build:
      context: ./server
    container_name: flask_app
    ports:
      - "5000:5000"
    networks:
      - custom_network

  cert-generator:
    image: openquantumsafe/oqs-ossl3:latest
    container_name: cert-generator
    volumes:
      - certs-volume:/certs
      - ./cert-generator:/cert-generator
    stdin_open: true
    env_file:
      - ./cert-generator/.env
    tty: true
    entrypoint: >
      sh -c "/bin/sh /cert-generator/generate_certs.sh"
    networks:
      - custom_network

  nginx:
    build:
      context: ./nginx
    container_name: nginx_pq
    ports:
      - "4433:4433"
    volumes:
      - certs-volume:/opt/nginx/certs
      - ./output:/opt/nginx/output
    depends_on:
      cert-generator:
        condition: service_completed_successfully
    networks:
      custom_network:
        ipv4_address: 192.168.1.100

  client-analysis:
    build:
      context: ./client
    container_name: client_analysis
    volumes:
      - ./output:/app/output
      - certs-volume:/opt/certs
    depends_on:
      - nginx
    networks:
      - custom_network
    stdin_open: true
    tty: true
