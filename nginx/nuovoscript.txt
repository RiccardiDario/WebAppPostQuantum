import psutil
import csv
import time
import os

OUTPUT_FILE = "/opt/nginx/output/nginx_performance.csv"

def initialize_csv():
    """Inizializza il file CSV con l'intestazione, se necessario."""
    if not os.path.exists(OUTPUT_FILE):
        with open(OUTPUT_FILE, mode="w", newline="", encoding="utf-8") as file:
            writer = csv.writer(file)
            writer.writerow([
                "Timestamp", "CPU_Usage", "Memory_Usage_MB", "Open_Connections", "Bytes_Received", "Bytes_Sent"
            ])

def monitor_resources():
    """Monitora le risorse del server Nginx."""
    timestamp = time.strftime("%Y-%m-%d %H:%M:%S")
    cpu_usage = 0
    memory_usage = 0

    # Monitoraggio CPU e memoria
    nginx_processes = [proc for proc in psutil.process_iter(['name']) if proc.info['name'] == 'nginx']
    for proc in nginx_processes:
        try:
            cpu_usage += proc.cpu_percent(interval=0)
            memory_usage += proc.memory_info().rss / (1024 ** 2)  # Converti in MB
        except psutil.NoSuchProcess:
            continue

    # Connessioni attive
    open_connections = 0
    try:
        result = subprocess.run(["ss", "-tan", "state", "established"], capture_output=True, text=True)
        open_connections = len(result.stdout.splitlines())
    except Exception as e:
        open_connections = 0

    # Banda di rete
    net_io = psutil.net_io_counters()
    bytes_received = net_io.bytes_recv
    bytes_sent = net_io.bytes_sent

    # Scrittura nel CSV
    with open(OUTPUT_FILE, mode="a", newline="", encoding="utf-8") as file:
        writer = csv.writer(file)
        writer.writerow([
            timestamp, cpu_usage, memory_usage, open_connections,
            bytes_received / (1024 ** 2), bytes_sent / (1024 ** 2)
        ])
        print(f"{timestamp}: CPU={cpu_usage}%, Memoria={memory_usage}MB, Connessioni={open_connections}")

if __name__ == "__main__":
    initialize_csv()
    monitor_resources()
